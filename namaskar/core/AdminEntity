<?php
namespace Qwwwest\Namaskar;

use Qwwwest\Namaskar\Kernel;
use App\Entity\UserEntity;

class AdminEntity extends UserEntity
{

    public function __construct()
    {
        # code...
    }

    public function login($login, $pwd)
    {
        $this->logout();

        $zen = Kernel::service('ZenConfig');
        if (is_file($zen('folder.data') . '/config.ini')) {
            $super = file_get_contents($zen('folder.data')
                . '/config.ini');

        } else {
            die('config.ini not found.');
        }
        if (strpos($super, '::') != false)
            die('you did not enter any account');
        [$salt, $hash] = explode("\n", $super);


        $pwdOk = password_verify("$salt$login::$pwd", $hash);

        if ($pwdOk) {

            $_SESSION['valid'] = true;
            $_SESSION['timeout'] = time();

            $_SESSION['currentUser'] = [
                'login' => $login,
                'role' => 'ROLE_SUPER_ADMIN',
                'domain' => '*',
                'isAuthed' => true,
            ];
            Kernel::getKernel()->setUser();
            $page = "ADMIN";

        } else {
            $zen('page.warning', 'Log-in Failed.');
        }


    }


    public function logout()
    {
        session_destroy();
        $_SESSION = [];
    }

    public function adminPageBuilder($url)
    {
        $zen = Kernel::service('ZenConfig');
        $page = "LOGIN";

        $navbar = [];
        if ($this->isGranted('ROLE_SUPER_ADMIN')) {
            $page = "SITES";
            $navbar = [
                ['label' => 'sites', 'url' => 'root/sites'],
                ['label' => 'users', 'url' => 'root/users'],
                ['label' => 'logout', 'url' => 'root/logout'],

            ];
        }
        $zen('page.content', '');
        $zen('page.form', $page);


    }

    public function loogin($login, $pwd)
    {
        $zen = Kernel::service('ZenConfig');
        $page = "LOGIN";

        if (!$this->isGranted('ROLE_SUPER_ADMIN')) {
            $super = file_get_contents($zen('folder.data') . '/config.ini');
            [$salt, $hash] = explode("\n", $super);
            if (strpos($super, '::') != false)
                die('you did not enter any account');

            if ($this->method() === 'POST') {
                $login = $_POST['email'] ?? '';
                $pwd = $_POST['password'] ?? '';


                $pwdOk = password_verify("$salt$login::$pwd", $hash);

                if ($pwdOk) {

                    $_SESSION['valid'] = true;
                    $_SESSION['timeout'] = time();
                    $_SESSION['login'] = $login;
                    $_SESSION['role'] = 'ROLE_SUPER_ADMIN';
                    $_SESSION['readOnly'] = false;

                    $_SESSION['currentUser'] = [
                        'login' => $login,
                        'role' => 'ROLE_SUPER_ADMIN',
                        'domain' => '*',
                    ];
                    Kernel::getKernel()->setUser();
                    $page = "ADMIN";

                } else {
                    $zen('page.warning', 'Log-in Failed.');
                }

            }
            $zen('page.content', '');
            $zen('page.form', $page);
            $this->buildTemplates('bootstrap5');
            return $this->render('bootstrap5');


        }

    }

}